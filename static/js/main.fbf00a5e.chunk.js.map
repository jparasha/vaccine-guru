{"version":3,"sources":["interceptor.js","utils.js","Components/SearchComponent.js","Components/Tile.js","Components/ResultComponent.js","App.js","reportWebVitals.js","index.js"],"names":["URL","process","console","log","interceptor","axios","create","baseURL","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","manageEvents","event","preventDefault","stopPropagation","SearchComponent","data","searchHandler","useState","pinCode","setPinCode","_inputRef","className","INPUT_LABEL","id","ref","type","inputMode","pattern","value","onChange","target","test","length","placeholder","input_placeholder","onClick","blur","focus","search_button_text","Tile","ResultComponent","response","errors","CONSTANTS","setRef","centers","RESULTS_FOUND","ERROR_MSG","map","center","index","district_name","name","state_name","fee_type","from","to","sessions","_available_capacity","_min_age_limit","_vaccine","forEach","session","available_capacity","min_age_limit","vaccine","toFixed","substr","App","hospitals","setHospitals","setErrors","resultRef","pin","get","then","setTimeout","scrollIntoView","behavior","block","inline","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbf00a5e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = (process.env.NODE_ENV === 'production') ? (process.env.REACT_APP_BASE_URL || '') : (process.env.REACT_APP_BASE_URL_DEV || '');\r\nconsole.log(URL);\r\nconst interceptor = axios.create({\r\n    baseURL: URL\r\n});\r\n\r\nexport default interceptor;\r\n","\r\nexport const getFormattedDate = (date = new Date()) => {\r\n    const year = date.getFullYear();\r\n    const month = (1 + date.getMonth()).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return (day + '-' + month + '-' + year);\r\n};\r\n\r\n","import { useState } from 'react';\r\nimport './search.css';\r\n\r\nconst manageEvents = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n};\r\n\r\nconst SearchComponent = ({ data = {}, searchHandler }) => {\r\n    const [pinCode, setPinCode] = useState('');\r\n    let _inputRef = null;\r\n\r\n\r\n    const onPinChange = (event = {}) => {\r\n        manageEvents(event);\r\n        const { value = '' } = event.target || {};\r\n        if (!(/^\\d*$/.test(value)) || value.length > 6) {\r\n            return false;\r\n        } else {\r\n            (value !== pinCode) && setPinCode(value);\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const onSearch = event => {\r\n        manageEvents(event);\r\n        if (pinCode.length === 6) {\r\n            _inputRef && _inputRef.blur();\r\n            searchHandler && searchHandler(pinCode);\r\n        } else {\r\n            _inputRef && _inputRef.focus();\r\n        }\r\n    };\r\n    console.log(pinCode);\r\n\r\n    return (\r\n        <div className='search-component'>\r\n            <form className='search'>\r\n                <h3 className='flex-item'>{data.INPUT_LABEL}</h3>\r\n                <input\r\n                    id='mainInput'\r\n                    ref={ref => _inputRef = ref}\r\n                    type='text'\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[0-9]*\"\r\n                    value={pinCode}\r\n                    onChange={onPinChange}\r\n                    className='search__input flex-item'\r\n                    placeholder={data.input_placeholder || ''}\r\n                />\r\n\r\n\r\n                <button type='submit' className='search__button flex-item' onClick={onSearch}>\r\n                    {data.search_button_text || 'check'}\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchComponent;\r\n","import './Tile.css';\r\n\r\nconst Tile = ({ data }) => {\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return (\r\n        <span className='tile'>\r\n            {data}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Tile;\r\n","import './results.css';\r\nimport { Fragment, useEffect } from 'react';\r\nimport Tile from './Tile';\r\n\r\nconst ResultComponent = ({ response = {}, errors = null, data: CONSTANTS = {}, setRef }) => {\r\n    const { centers = [] } = response || {};\r\n\r\n    console.log(centers);\r\n    return (\r\n        <Fragment>\r\n            <div className='centers' id='resultCenters' ref={ref => setRef(ref)}>\r\n                {\r\n                    (errors !== null) && <h2 className='container result-count'>{`${centers.length} ${CONSTANTS.RESULTS_FOUND}`}</h2>\r\n                }\r\n                {\r\n                    (errors) ?\r\n                        <div className='center' >\r\n                            {CONSTANTS.ERROR_MSG || ''}\r\n                        </div>\r\n                        :\r\n                        centers.map(\r\n                            (center = {}, index = '') => {\r\n                                const { district_name = '', name = '', state_name = '', fee_type = '', from = '', to = '', sessions = [] } = center;\r\n                                let _available_capacity = '', _min_age_limit = '', _vaccine = '';\r\n                                return (\r\n                                    <div className='center' key={index}>\r\n                                        <div className='center__title'>\r\n                                            <h6 className='no-margin center__title-secondary'>{`${district_name}, ${state_name}`}</h6>\r\n                                            <h5 className='no-margin center__title-primary'><strong>{name}</strong></h5>\r\n                                        </div>\r\n                                        {\r\n                                            sessions.forEach((session = {}) => {\r\n                                                const { available_capacity = '', min_age_limit = '', vaccine = '', date = '' } = session;\r\n                                                _available_capacity = _available_capacity || available_capacity;\r\n                                                _min_age_limit = _min_age_limit || min_age_limit;\r\n                                                _vaccine = _vaccine || vaccine;\r\n                                            })\r\n                                        }\r\n                                        <div className='center__tiles'>\r\n                                            <Tile data={`${_min_age_limit} + `} />\r\n                                            <Tile data={`${_vaccine || ''}`} />\r\n                                            <Tile data={`${_available_capacity.toFixed() || 'not'} available`} />\r\n                                        </div>\r\n                                        <div className='card__age-limit'>\r\n                                            <div>{`${fee_type}`}</div>\r\n                                            <div>{`${from.substr(0, 5)} - ${to.substr(0, 5)}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ResultComponent;\r\n","import './App.css';\nimport { useState } from 'react';\nimport CONSTANTS from './constants.json';\nimport axios from './interceptor';\nimport { getFormattedDate } from './utils';\nimport SearchComponent from './Components/SearchComponent';\nimport ResultComponent from './Components/ResultComponent';\n\nfunction App() {\n\n  const [hospitals, setHospitals] = useState(null);\n  const [errors, setErrors] = useState(null);\n  let resultRef = null;\n\n  const setResultRef = ref => (resultRef = (resultRef || ref));\n\n\n  const searchHandler = pin => {\n    console.log(pin, getFormattedDate());\n    const isProduction = (process.env.NODE_ENV === 'production');\n    axios.get(isProduction ? `calendarByPin?pincode=${pin}&date=${getFormattedDate()}` : '')\n      .then(({ data = {} }) => {\n        setHospitals(data);\n        setErrors(false);\n        if (resultRef) {\n          setTimeout(() => {\n            resultRef.scrollIntoView({ behavior: 'smooth', block: 'start', inline: 'nearest' });\n          });\n        }\n\n      })\n      .catch(() => setErrors(true));\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchComponent\n        data={CONSTANTS}\n        searchHandler={searchHandler}\n      />\n      {<ResultComponent\n        response={hospitals}\n        data={CONSTANTS}\n        errors={errors}\n        setRef={setResultRef}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}